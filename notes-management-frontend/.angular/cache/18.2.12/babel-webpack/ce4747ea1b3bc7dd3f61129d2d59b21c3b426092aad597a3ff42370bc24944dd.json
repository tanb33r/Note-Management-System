{"ast":null,"code":"import { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    http;\n    apiUrl = `${environment.apiUrl}/Auth`;\n    constructor(http) {\n      this.http = http;\n    }\n    login(user) {\n      return this.http.post(`${this.apiUrl}/login`, user);\n    }\n    register(user) {\n      // user.dob = user.dob.toISOString().split('T')[0]; \n      return this.http.post(`${this.apiUrl}/register`, user);\n    }\n    isAuthenticated() {\n      return !!localStorage.getItem('authToken');\n    }\n    static ɵfac = function AuthService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || AuthService)(i0.ɵɵinject(i1.HttpClient));\n    };\n    static ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthService,\n      factory: AuthService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return AuthService;\n})();","map":{"version":3,"names":["environment","AuthService","http","apiUrl","constructor","login","user","post","register","isAuthenticated","localStorage","getItem","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["D:\\Projects\\Note Management\\notes-management-frontend\\src\\app\\services\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { User } from '../models/user.model';\r\nimport { environment } from '../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthService {\r\n  \r\n    private apiUrl =  `${environment.apiUrl}/Auth`\r\n    \r\n  constructor(private http: HttpClient) {}\r\n\r\n  login(user: User): Observable<any> {\r\n    return this.http.post<any>(`${this.apiUrl}/login`, user);\r\n  }\r\n\r\n  register(user: User): Observable<any> {\r\n    // user.dob = user.dob.toISOString().split('T')[0]; \r\n    return this.http.post<any>(`${this.apiUrl}/register`, user);\r\n  }\r\n\r\n  isAuthenticated(): boolean {\r\n    return !!localStorage.getItem('authToken');\r\n  }\r\n}\r\n"],"mappings":"AAIA,SAASA,WAAW,QAAQ,gCAAgC;;;AAK5D,WAAaC,WAAW;EAAlB,MAAOA,WAAW;IAIFC,IAAA;IAFVC,MAAM,GAAI,GAAGH,WAAW,CAACG,MAAM,OAAO;IAEhDC,YAAoBF,IAAgB;MAAhB,KAAAA,IAAI,GAAJA,IAAI;IAAe;IAEvCG,KAAKA,CAACC,IAAU;MACd,OAAO,IAAI,CAACJ,IAAI,CAACK,IAAI,CAAM,GAAG,IAAI,CAACJ,MAAM,QAAQ,EAAEG,IAAI,CAAC;IAC1D;IAEAE,QAAQA,CAACF,IAAU;MACjB;MACA,OAAO,IAAI,CAACJ,IAAI,CAACK,IAAI,CAAM,GAAG,IAAI,CAACJ,MAAM,WAAW,EAAEG,IAAI,CAAC;IAC7D;IAEAG,eAAeA,CAAA;MACb,OAAO,CAAC,CAACC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IAC5C;;uCAjBWV,WAAW,EAAAW,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;;aAAXd,WAAW;MAAAe,OAAA,EAAXf,WAAW,CAAAgB,IAAA;MAAAC,UAAA,EAFV;IAAM;;SAEPjB,WAAW;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}