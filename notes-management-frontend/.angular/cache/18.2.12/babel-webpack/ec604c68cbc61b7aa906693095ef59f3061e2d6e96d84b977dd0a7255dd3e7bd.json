{"ast":null,"code":"import { BrowserModule } from '@angular/platform-browser';\nimport { AppComponent } from './app.component';\nimport { RouterModule } from '@angular/router';\nimport { LoginComponent } from './auth/login/login.component';\nimport { RegisterComponent } from './auth/register/register.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { FormsModule } from '@angular/forms';\nimport { AuthService } from './services/auth.service';\nimport { provideHttpClient } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nconst appRoutes = [{\n  path: '',\n  redirectTo: '/login',\n  pathMatch: 'full'\n}, {\n  path: 'login',\n  component: LoginComponent\n}, {\n  path: 'register',\n  component: RegisterComponent\n}, {\n  path: 'dashboard',\n  component: DashboardComponent\n}];\nexport let AppModule = /*#__PURE__*/(() => {\n  class AppModule {\n    static ɵfac = function AppModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || AppModule)();\n    };\n    static ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n      type: AppModule,\n      bootstrap: [AppComponent]\n    });\n    static ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n      providers: [provideHttpClient(), AuthService],\n      imports: [BrowserModule, FormsModule, RouterModule.forRoot([{\n        path: 'login',\n        component: LoginComponent\n      }, {\n        path: 'register',\n        component: RegisterComponent\n      }, {\n        path: '',\n        redirectTo: '/login',\n        pathMatch: 'full'\n      } // Default route\n      ])]\n    });\n  }\n  return AppModule;\n})();\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(AppModule, {\n    declarations: [AppComponent, LoginComponent, RegisterComponent],\n    imports: [DashboardComponent, BrowserModule, FormsModule, i1.RouterModule]\n  });\n})();","map":{"version":3,"names":["BrowserModule","AppComponent","RouterModule","LoginComponent","RegisterComponent","DashboardComponent","FormsModule","AuthService","provideHttpClient","appRoutes","path","redirectTo","pathMatch","component","AppModule","bootstrap","imports","forRoot","declarations","i1"],"sources":["D:\\Projects\\Note Management\\notes-management-frontend\\src\\app\\app.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { AppComponent } from './app.component';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { LoginComponent } from './auth/login/login.component';\r\nimport { RegisterComponent } from './auth/register/register.component';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { AuthService } from './services/auth.service';\r\nimport { provideHttpClient  } from '@angular/common/http'; \r\n\r\nconst appRoutes: Routes = [\r\n  { path: '', redirectTo: '/login', pathMatch: 'full' },\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'register', component: RegisterComponent },\r\n  { path: 'dashboard', component: DashboardComponent }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    RegisterComponent,\r\n],\r\nimports: [\r\n      DashboardComponent,\r\n    BrowserModule,\r\n    FormsModule,\r\n    RouterModule.forRoot([  // Define the routes here\r\n        { path: 'login', component: LoginComponent },\r\n        { path: 'register', component: RegisterComponent },\r\n        { path: '', redirectTo: '/login', pathMatch: 'full' }, // Default route\r\n      ])\r\n  ],\r\n  providers: [provideHttpClient(),\r\n    AuthService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n"],"mappings":"AACA,SAASA,aAAa,QAAQ,2BAA2B;AACzD,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,YAAY,QAAgB,iBAAiB;AACtD,SAASC,cAAc,QAAQ,8BAA8B;AAC7D,SAASC,iBAAiB,QAAQ,oCAAoC;AACtE,SAASC,kBAAkB,QAAQ,iCAAiC;AACpE,SAASC,WAAW,QAAQ,gBAAgB;AAC5C,SAASC,WAAW,QAAQ,yBAAyB;AACrD,SAASC,iBAAiB,QAAS,sBAAsB;;;AAEzD,MAAMC,SAAS,GAAW,CACxB;EAAEC,IAAI,EAAE,EAAE;EAAEC,UAAU,EAAE,QAAQ;EAAEC,SAAS,EAAE;AAAM,CAAE,EACrD;EAAEF,IAAI,EAAE,OAAO;EAAEG,SAAS,EAAEV;AAAc,CAAE,EAC5C;EAAEO,IAAI,EAAE,UAAU;EAAEG,SAAS,EAAET;AAAiB,CAAE,EAClD;EAAEM,IAAI,EAAE,WAAW;EAAEG,SAAS,EAAER;AAAkB,CAAE,CACrD;AAsBD,WAAaS,SAAS;EAAhB,MAAOA,SAAS;;uCAATA,SAAS;IAAA;;YAATA,SAAS;MAAAC,SAAA,GAFRd,YAAY;IAAA;;iBAFb,CAACO,iBAAiB,EAAE,EAC7BD,WAAW,CAAC;MAAAS,OAAA,GATZhB,aAAa,EACbM,WAAW,EACXJ,YAAY,CAACe,OAAO,CAAC,CACjB;QAAEP,IAAI,EAAE,OAAO;QAAEG,SAAS,EAAEV;MAAc,CAAE,EAC5C;QAAEO,IAAI,EAAE,UAAU;QAAEG,SAAS,EAAET;MAAiB,CAAE,EAClD;QAAEM,IAAI,EAAE,EAAE;QAAEC,UAAU,EAAE,QAAQ;QAAEC,SAAS,EAAE;MAAM,CAAE,CAAE;MAAA,CACxD,CAAC;IAAA;;SAMKE,SAAS;AAAA;;2EAATA,SAAS;IAAAI,YAAA,GAlBlBjB,YAAY,EACZE,cAAc,EACdC,iBAAiB;IAAAY,OAAA,GAGfX,kBAAkB,EACpBL,aAAa,EACbM,WAAW,EAAAa,EAAA,CAAAjB,YAAA;EAAA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}