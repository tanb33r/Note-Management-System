{"ast":null,"code":"import { User } from '../../models/user.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    authService;\n    router;\n    user = new User();\n    constructor(authService, router) {\n      this.authService = authService;\n      this.router = router;\n    }\n    onSubmit() {\n      if (this.user.email && this.user.password) {\n        this.authService.login(this.user).subscribe(response => {\n          // Handle successful login, maybe store JWT token and navigate\n          this.router.navigate(['/dashboard']);\n        }, error => {\n          // Handle error (e.g., incorrect login)\n          alert('Invalid login credentials');\n        });\n      }\n    }\n    static ɵfac = function LoginComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || LoginComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: LoginComponent,\n      selectors: [[\"app-login\"]],\n      decls: 14,\n      vars: 2,\n      consts: [[1, \"login-container\"], [3, \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"email\"], [\"type\", \"email\", \"id\", \"email\", \"name\", \"email\", \"required\", \"\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"name\", \"password\", \"required\", \"\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"]],\n      template: function LoginComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n          i0.ɵɵtext(2, \"Login\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"form\", 1);\n          i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_3_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(4, \"div\", 2)(5, \"label\", 3);\n          i0.ɵɵtext(6, \"Email\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(7, \"input\", 4);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_7_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.user.email, $event) || (ctx.user.email = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(8, \"div\", 2)(9, \"label\", 5);\n          i0.ɵɵtext(10, \"Password\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(11, \"input\", 6);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_11_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.user.password, $event) || (ctx.user.password = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(12, \"button\", 7);\n          i0.ɵɵtext(13, \"Login\");\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(7);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.user.email);\n          i0.ɵɵadvance(4);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.user.password);\n        }\n      },\n      dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n  return LoginComponent;\n})();","map":{"version":3,"names":["User","LoginComponent","authService","router","user","constructor","onSubmit","email","password","login","subscribe","response","navigate","error","alert","i0","ɵɵdirectiveInject","i1","AuthService","i2","Router","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","LoginComponent_Template_form_ngSubmit_3_listener","ɵɵtwoWayListener","LoginComponent_Template_input_ngModelChange_7_listener","$event","ɵɵtwoWayBindingSet","LoginComponent_Template_input_ngModelChange_11_listener","ɵɵadvance","ɵɵtwoWayProperty"],"sources":["D:\\Projects\\Note Management\\notes-management-frontend\\src\\app\\auth\\login\\login.component.ts","D:\\Projects\\Note Management\\notes-management-frontend\\src\\app\\auth\\login\\login.component.html"],"sourcesContent":["// src/app/login/login.component.ts\r\nimport { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { User } from '../../models/user.model';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent {\r\n  user: User = new User();\r\n\r\n  constructor(private authService: AuthService, private router: Router) {}\r\n\r\n  onSubmit() {\r\n    if (this.user.email && this.user.password) {\r\n      this.authService.login(this.user).subscribe(\r\n        (response: any) => {\r\n          // Handle successful login, maybe store JWT token and navigate\r\n        this.router.navigate(['/dashboard']);\r\n        },\r\n        (error: any) => {\r\n          // Handle error (e.g., incorrect login)\r\n          alert('Invalid login credentials');\r\n        }\r\n      );\r\n    }\r\n  }\r\n}\r\n","<!-- src/app/login/login.component.html -->\r\n<div class=\"login-container\">\r\n    <h2>Login</h2>\r\n    <form (ngSubmit)=\"onSubmit()\">\r\n      <div class=\"form-group\">\r\n        <label for=\"email\">Email</label>\r\n        <input\r\n          type=\"email\"\r\n          id=\"email\"\r\n          class=\"form-control\"\r\n          [(ngModel)]=\"user.email\"\r\n          name=\"email\"\r\n          required\r\n        />\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"password\">Password</label>\r\n        <input\r\n          type=\"password\"\r\n          id=\"password\"\r\n          class=\"form-control\"\r\n          [(ngModel)]=\"user.password\"\r\n          name=\"password\"\r\n          required\r\n        />\r\n      </div>\r\n      <button type=\"submit\" class=\"btn btn-primary\">Login</button>\r\n    </form>\r\n  </div>\r\n  "],"mappings":"AAIA,SAASA,IAAI,QAAQ,yBAAyB;;;;;AAO9C,WAAaC,cAAc;EAArB,MAAOA,cAAc;IAGLC,WAAA;IAAkCC,MAAA;IAFtDC,IAAI,GAAS,IAAIJ,IAAI,EAAE;IAEvBK,YAAoBH,WAAwB,EAAUC,MAAc;MAAhD,KAAAD,WAAW,GAAXA,WAAW;MAAuB,KAAAC,MAAM,GAANA,MAAM;IAAW;IAEvEG,QAAQA,CAAA;MACN,IAAI,IAAI,CAACF,IAAI,CAACG,KAAK,IAAI,IAAI,CAACH,IAAI,CAACI,QAAQ,EAAE;QACzC,IAAI,CAACN,WAAW,CAACO,KAAK,CAAC,IAAI,CAACL,IAAI,CAAC,CAACM,SAAS,CACxCC,QAAa,IAAI;UAChB;UACF,IAAI,CAACR,MAAM,CAACS,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC;QACpC,CAAC,EACAC,KAAU,IAAI;UACb;UACAC,KAAK,CAAC,2BAA2B,CAAC;QACpC,CAAC,CACF;MACH;IACF;;uCAlBWb,cAAc,EAAAc,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,MAAA;IAAA;;YAAdnB,cAAc;MAAAoB,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCTvBZ,EADJ,CAAAc,cAAA,aAA6B,SACrB;UAAAd,EAAA,CAAAe,MAAA,YAAK;UAAAf,EAAA,CAAAgB,YAAA,EAAK;UACdhB,EAAA,CAAAc,cAAA,cAA8B;UAAxBd,EAAA,CAAAiB,UAAA,sBAAAC,iDAAA;YAAA,OAAYL,GAAA,CAAAtB,QAAA,EAAU;UAAA,EAAC;UAEzBS,EADF,CAAAc,cAAA,aAAwB,eACH;UAAAd,EAAA,CAAAe,MAAA,YAAK;UAAAf,EAAA,CAAAgB,YAAA,EAAQ;UAChChB,EAAA,CAAAc,cAAA,eAOE;UAHAd,EAAA,CAAAmB,gBAAA,2BAAAC,uDAAAC,MAAA;YAAArB,EAAA,CAAAsB,kBAAA,CAAAT,GAAA,CAAAxB,IAAA,CAAAG,KAAA,EAAA6B,MAAA,MAAAR,GAAA,CAAAxB,IAAA,CAAAG,KAAA,GAAA6B,MAAA;YAAA,OAAAA,MAAA;UAAA,EAAwB;UAI5BrB,EARE,CAAAgB,YAAA,EAOE,EACE;UAEJhB,EADF,CAAAc,cAAA,aAAwB,eACA;UAAAd,EAAA,CAAAe,MAAA,gBAAQ;UAAAf,EAAA,CAAAgB,YAAA,EAAQ;UACtChB,EAAA,CAAAc,cAAA,gBAOE;UAHAd,EAAA,CAAAmB,gBAAA,2BAAAI,wDAAAF,MAAA;YAAArB,EAAA,CAAAsB,kBAAA,CAAAT,GAAA,CAAAxB,IAAA,CAAAI,QAAA,EAAA4B,MAAA,MAAAR,GAAA,CAAAxB,IAAA,CAAAI,QAAA,GAAA4B,MAAA;YAAA,OAAAA,MAAA;UAAA,EAA2B;UAI/BrB,EARE,CAAAgB,YAAA,EAOE,EACE;UACNhB,EAAA,CAAAc,cAAA,iBAA8C;UAAAd,EAAA,CAAAe,MAAA,aAAK;UAEvDf,EAFuD,CAAAgB,YAAA,EAAS,EACvD,EACH;;;UAlBEhB,EAAA,CAAAwB,SAAA,GAAwB;UAAxBxB,EAAA,CAAAyB,gBAAA,YAAAZ,GAAA,CAAAxB,IAAA,CAAAG,KAAA,CAAwB;UAWxBQ,EAAA,CAAAwB,SAAA,GAA2B;UAA3BxB,EAAA,CAAAyB,gBAAA,YAAAZ,GAAA,CAAAxB,IAAA,CAAAI,QAAA,CAA2B;;;;;;;SDVxBP,cAAc;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}