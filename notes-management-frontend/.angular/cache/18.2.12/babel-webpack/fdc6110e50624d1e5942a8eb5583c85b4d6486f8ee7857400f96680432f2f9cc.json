{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport let RegisterComponent = /*#__PURE__*/(() => {\n  class RegisterComponent {\n    authService;\n    router;\n    user = {\n      name: '',\n      email: '',\n      dateOfBirth: '',\n      password: ''\n    };\n    constructor(authService, router) {\n      this.authService = authService;\n      this.router = router;\n    }\n    onSubmit() {\n      if (this.user.name && this.user.email && this.user.dateOfBirth && this.user.password) {\n        // Call the register service method to handle API call\n        this.authService.register(this.user).subscribe(response => {\n          // Handle successful registration (redirect to login or dashboard)\n          this.router.navigate(['/login']);\n        }, error => {\n          console.log(error);\n          alert('Registration failed! Please try again.');\n        });\n      }\n    }\n    static ɵfac = function RegisterComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || RegisterComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: RegisterComponent,\n      selectors: [[\"app-register\"]],\n      decls: 22,\n      vars: 4,\n      consts: [[1, \"register-container\"], [3, \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"name\"], [\"type\", \"text\", \"id\", \"name\", \"name\", \"name\", \"required\", \"\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [\"for\", \"email\"], [\"type\", \"email\", \"id\", \"email\", \"name\", \"email\", \"required\", \"\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [\"for\", \"dateOfBirth\"], [\"type\", \"date\", \"id\", \"dateOfBirth\", \"name\", \"dateOfBirth\", \"required\", \"\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"name\", \"password\", \"required\", \"\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"]],\n      template: function RegisterComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n          i0.ɵɵtext(2, \"Register\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"form\", 1);\n          i0.ɵɵlistener(\"ngSubmit\", function RegisterComponent_Template_form_ngSubmit_3_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(4, \"div\", 2)(5, \"label\", 3);\n          i0.ɵɵtext(6, \"Name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(7, \"input\", 4);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_7_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.user.name, $event) || (ctx.user.name = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(8, \"div\", 2)(9, \"label\", 5);\n          i0.ɵɵtext(10, \"Email\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(11, \"input\", 6);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_11_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.user.email, $event) || (ctx.user.email = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(12, \"div\", 2)(13, \"label\", 7);\n          i0.ɵɵtext(14, \"Date of Birth\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(15, \"input\", 8);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_15_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.user.dateOfBirth, $event) || (ctx.user.dateOfBirth = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(16, \"div\", 2)(17, \"label\", 9);\n          i0.ɵɵtext(18, \"Password\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(19, \"input\", 10);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_19_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.user.password, $event) || (ctx.user.password = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(20, \"button\", 11);\n          i0.ɵɵtext(21, \"Register\");\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(7);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.user.name);\n          i0.ɵɵadvance(4);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.user.email);\n          i0.ɵɵadvance(4);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.user.dateOfBirth);\n          i0.ɵɵadvance(4);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.user.password);\n        }\n      },\n      dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n  return RegisterComponent;\n})();","map":{"version":3,"names":["RegisterComponent","authService","router","user","name","email","dateOfBirth","password","constructor","onSubmit","register","subscribe","response","navigate","error","console","log","alert","i0","ɵɵdirectiveInject","i1","AuthService","i2","Router","selectors","decls","vars","consts","template","RegisterComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","RegisterComponent_Template_form_ngSubmit_3_listener","ɵɵtwoWayListener","RegisterComponent_Template_input_ngModelChange_7_listener","$event","ɵɵtwoWayBindingSet","RegisterComponent_Template_input_ngModelChange_11_listener","RegisterComponent_Template_input_ngModelChange_15_listener","RegisterComponent_Template_input_ngModelChange_19_listener","ɵɵadvance","ɵɵtwoWayProperty"],"sources":["D:\\Projects\\Note Management\\notes-management-frontend\\src\\app\\auth\\register\\register.component.ts","D:\\Projects\\Note Management\\notes-management-frontend\\src\\app\\auth\\register\\register.component.html"],"sourcesContent":["// register.component.ts\r\nimport { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { User } from '../../models/user.model';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent {\r\n  user : User = {\r\n    name: '',\r\n    email: '',\r\n    dateOfBirth: '',\r\n    password: ''\r\n  };\r\n\r\n  constructor(private authService: AuthService, private router: Router) {}\r\n\r\n  onSubmit() {\r\n    if (this.user.name && this.user.email && this.user.dateOfBirth && this.user.password) {\r\n      // Call the register service method to handle API call\r\n      this.authService.register(this.user).subscribe(\r\n        (response: any) => {\r\n          // Handle successful registration (redirect to login or dashboard)\r\n          this.router.navigate(['/login']);\r\n        },\r\n        (error: any) => {\r\n          console.log(error);\r\n          alert('Registration failed! Please try again.');\r\n        }\r\n      );\r\n    }\r\n  }\r\n}\r\n","<!-- register.component.html -->\r\n\r\n<div class=\"register-container\">\r\n    <h2>Register</h2>\r\n    <form (ngSubmit)=\"onSubmit()\">\r\n      <div class=\"form-group\">\r\n        <label for=\"name\">Name</label>\r\n        <input type=\"text\" id=\"name\" class=\"form-control\" [(ngModel)]=\"user.name\" name=\"name\" required />\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"email\">Email</label>\r\n        <input type=\"email\" id=\"email\" class=\"form-control\" [(ngModel)]=\"user.email\" name=\"email\" required />\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"dateOfBirth\">Date of Birth</label>\r\n        <input type=\"date\" id=\"dateOfBirth\" class=\"form-control\" [(ngModel)]=\"user.dateOfBirth\" name=\"dateOfBirth\" required />\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"password\">Password</label>\r\n        <input type=\"password\" id=\"password\" class=\"form-control\" [(ngModel)]=\"user.password\" name=\"password\" required />\r\n      </div>\r\n      <button type=\"submit\" class=\"btn btn-primary\">Register</button>\r\n    </form>\r\n  </div>\r\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}