{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/note.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction DashboardComponent_div_3_p_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"date\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const note_r2 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\"Reminder: \", i0.ɵɵpipeBind2(2, 1, note_r2.reminder, \"short\"), \"\");\n  }\n}\nfunction DashboardComponent_div_3_p_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"date\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const note_r2 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\"Due Date: \", i0.ɵɵpipeBind2(2, 1, note_r2.dueDate, \"short\"), \"\");\n  }\n}\nfunction DashboardComponent_div_3_p_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const note_r2 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\"Completed: \", note_r2.isCompleted ? \"Yes\" : \"No\", \"\");\n  }\n}\nfunction DashboardComponent_div_3_p_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\")(1, \"a\", 15);\n    i0.ɵɵtext(2, \"Visit Bookmark\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const note_r2 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"href\", note_r2.content, i0.ɵɵsanitizeUrl);\n  }\n}\nfunction DashboardComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14)(1, \"h4\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, DashboardComponent_div_3_p_5_Template, 3, 4, \"p\", 12)(6, DashboardComponent_div_3_p_6_Template, 3, 4, \"p\", 12)(7, DashboardComponent_div_3_p_7_Template, 2, 1, \"p\", 12)(8, DashboardComponent_div_3_p_8_Template, 3, 1, \"p\", 12);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const note_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(note_r2.type);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(note_r2.content);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", note_r2.reminder);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", note_r2.dueDate);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", note_r2.type === \"ToDo\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", note_r2.type === \"Bookmark\");\n  }\n}\nfunction DashboardComponent_div_22_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"label\", 16);\n    i0.ɵɵtext(2, \"Reminder (Date + Time)\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"input\", 17);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function DashboardComponent_div_22_Template_input_ngModelChange_3_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r3 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r3.newNote.reminder, $event) || (ctx_r3.newNote.reminder = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r3.newNote.reminder);\n  }\n}\nfunction DashboardComponent_div_23_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"label\", 18);\n    i0.ɵɵtext(2, \"Due Date (Date + Time)\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"input\", 19);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function DashboardComponent_div_23_Template_input_ngModelChange_3_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r3 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r3.newNote.dueDate, $event) || (ctx_r3.newNote.dueDate = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"label\")(5, \"input\", 20);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function DashboardComponent_div_23_Template_input_ngModelChange_5_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r3 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r3.newNote.isCompleted, $event) || (ctx_r3.newNote.isCompleted = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(6, \" Completed \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r3.newNote.dueDate);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r3.newNote.isCompleted);\n  }\n}\nexport let DashboardComponent = /*#__PURE__*/(() => {\n  class DashboardComponent {\n    noteService;\n    notes = [];\n    newNote = {\n      type: '',\n      content: '',\n      reminder: '',\n      dueDate: '',\n      isCompleted: false\n    };\n    constructor(noteService) {\n      this.noteService = noteService;\n    }\n    ngOnInit() {\n      this.fetchNotes();\n    }\n    fetchNotes() {\n      this.noteService.getNotes().subscribe(data => {\n        this.notes = data;\n      }, error => {\n        console.error('Error fetching notes:', error);\n      });\n    }\n    addNote() {\n      if (this.newNote.content.length > 100) {\n        alert('Note content cannot exceed 100 characters.');\n        return;\n      }\n      this.newNote.reminder = this.newNote.reminder ? new Date(this.newNote.reminder) : null, this.newNote.dueDate = this.newNote.dueDate ? new Date(this.newNote.dueDate) : null, this.noteService.addNote(this.newNote).subscribe(updatedNotes => {\n        this.notes = updatedNotes;\n        this.resetNoteForm();\n      }, error => {\n        console.error('Error adding note:', error);\n      });\n    }\n    resetNoteForm() {\n      this.newNote = {\n        type: '',\n        content: '',\n        reminder: '',\n        dueDate: '',\n        isCompleted: false\n      };\n    }\n    static ɵfac = function DashboardComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || DashboardComponent)(i0.ɵɵdirectiveInject(i1.NoteService));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: DashboardComponent,\n      selectors: [[\"app-dashboard\"]],\n      decls: 26,\n      vars: 6,\n      consts: [[\"noteForm\", \"ngForm\"], [1, \"dashboard-container\"], [\"class\", \"note\", 4, \"ngFor\", \"ngForOf\"], [1, \"add-note-form\", 3, \"ngSubmit\"], [\"for\", \"type\"], [\"id\", \"type\", \"name\", \"type\", \"required\", \"\", 3, \"ngModelChange\", \"ngModel\"], [\"value\", \"Regular Note\"], [\"value\", \"Reminder\"], [\"value\", \"ToDo\"], [\"value\", \"Bookmark\"], [\"for\", \"content\"], [\"type\", \"text\", \"id\", \"content\", \"name\", \"content\", \"maxlength\", \"100\", \"required\", \"\", 3, \"ngModelChange\", \"ngModel\"], [4, \"ngIf\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [1, \"note\"], [\"target\", \"_blank\", 3, \"href\"], [\"for\", \"reminder\"], [\"type\", \"datetime-local\", \"id\", \"reminder\", \"name\", \"reminder\", 3, \"ngModelChange\", \"ngModel\"], [\"for\", \"dueDate\"], [\"type\", \"datetime-local\", \"id\", \"dueDate\", \"name\", \"dueDate\", 3, \"ngModelChange\", \"ngModel\"], [\"type\", \"checkbox\", \"name\", \"isCompleted\", 3, \"ngModelChange\", \"ngModel\"]],\n      template: function DashboardComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r1 = i0.ɵɵgetCurrentView();\n          i0.ɵɵelementStart(0, \"div\", 1)(1, \"h2\");\n          i0.ɵɵtext(2, \"Notes Dashboard\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(3, DashboardComponent_div_3_Template, 9, 6, \"div\", 2);\n          i0.ɵɵelementStart(4, \"form\", 3, 0);\n          i0.ɵɵlistener(\"ngSubmit\", function DashboardComponent_Template_form_ngSubmit_4_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.addNote());\n          });\n          i0.ɵɵelementStart(6, \"h3\");\n          i0.ɵɵtext(7, \"Add a New Note\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(8, \"label\", 4);\n          i0.ɵɵtext(9, \"Type\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(10, \"select\", 5);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function DashboardComponent_Template_select_ngModelChange_10_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            i0.ɵɵtwoWayBindingSet(ctx.newNote.type, $event) || (ctx.newNote.type = $event);\n            return i0.ɵɵresetView($event);\n          });\n          i0.ɵɵelementStart(11, \"option\", 6);\n          i0.ɵɵtext(12, \"Regular Note\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(13, \"option\", 7);\n          i0.ɵɵtext(14, \"Reminder\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(15, \"option\", 8);\n          i0.ɵɵtext(16, \"ToDo\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(17, \"option\", 9);\n          i0.ɵɵtext(18, \"Bookmark\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(19, \"label\", 10);\n          i0.ɵɵtext(20, \"Content\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(21, \"input\", 11);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function DashboardComponent_Template_input_ngModelChange_21_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            i0.ɵɵtwoWayBindingSet(ctx.newNote.content, $event) || (ctx.newNote.content = $event);\n            return i0.ɵɵresetView($event);\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(22, DashboardComponent_div_22_Template, 4, 1, \"div\", 12)(23, DashboardComponent_div_23_Template, 7, 2, \"div\", 12);\n          i0.ɵɵelementStart(24, \"button\", 13);\n          i0.ɵɵtext(25, \"Add Note\");\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          const noteForm_r6 = i0.ɵɵreference(5);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngForOf\", ctx.notes);\n          i0.ɵɵadvance(7);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.newNote.type);\n          i0.ɵɵadvance(11);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.newNote.content);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.newNote.type === \"Reminder\");\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.newNote.type === \"ToDo\");\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"disabled\", !noteForm_r6.valid);\n        }\n      },\n      dependencies: [i2.NgForOf, i2.NgIf, i3.ɵNgNoValidate, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor, i3.CheckboxControlValueAccessor, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.MaxLengthValidator, i3.NgModel, i3.NgForm, i2.DatePipe],\n      styles: [\".dashboard-container[_ngcontent-%COMP%] {\\n    padding: 20px;\\n    max-width: 800px;\\n    margin: 0 auto;\\n  }\\n  \\n  .note-card[_ngcontent-%COMP%] {\\n    border: 1px solid #ddd;\\n    border-radius: 5px;\\n    padding: 15px;\\n    margin-bottom: 15px;\\n    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\\n  }\\n  \\n  .note-card[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%] {\\n    margin-top: 0;\\n    font-size: 18px;\\n  }\\n  \\n  .completed-text[_ngcontent-%COMP%] {\\n    color: green;\\n    font-weight: bold;\\n  }\\n  \\n  .btn-success[_ngcontent-%COMP%] {\\n    background-color: #28a745;\\n    border: none;\\n    color: white;\\n    padding: 5px 10px;\\n    border-radius: 3px;\\n    cursor: pointer;\\n  }\\n  \\n  .btn-success[_ngcontent-%COMP%]:hover {\\n    background-color: #218838;\\n  }\\n  \\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZGFzaGJvYXJkL2Rhc2hib2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksYUFBYTtJQUNiLGdCQUFnQjtJQUNoQixjQUFjO0VBQ2hCOztFQUVBO0lBQ0Usc0JBQXNCO0lBQ3RCLGtCQUFrQjtJQUNsQixhQUFhO0lBQ2IsbUJBQW1CO0lBQ25CLHdDQUF3QztFQUMxQzs7RUFFQTtJQUNFLGFBQWE7SUFDYixlQUFlO0VBQ2pCOztFQUVBO0lBQ0UsWUFBWTtJQUNaLGlCQUFpQjtFQUNuQjs7RUFFQTtJQUNFLHlCQUF5QjtJQUN6QixZQUFZO0lBQ1osWUFBWTtJQUNaLGlCQUFpQjtJQUNqQixrQkFBa0I7SUFDbEIsZUFBZTtFQUNqQjs7RUFFQTtJQUNFLHlCQUF5QjtFQUMzQiIsInNvdXJjZXNDb250ZW50IjpbIi5kYXNoYm9hcmQtY29udGFpbmVyIHtcclxuICAgIHBhZGRpbmc6IDIwcHg7XHJcbiAgICBtYXgtd2lkdGg6IDgwMHB4O1xyXG4gICAgbWFyZ2luOiAwIGF1dG87XHJcbiAgfVxyXG4gIFxyXG4gIC5ub3RlLWNhcmQge1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgI2RkZDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICAgIHBhZGRpbmc6IDE1cHg7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAxNXB4O1xyXG4gICAgYm94LXNoYWRvdzogMCAycHggNXB4IHJnYmEoMCwgMCwgMCwgMC4xKTtcclxuICB9XHJcbiAgXHJcbiAgLm5vdGUtY2FyZCBoMyB7XHJcbiAgICBtYXJnaW4tdG9wOiAwO1xyXG4gICAgZm9udC1zaXplOiAxOHB4O1xyXG4gIH1cclxuICBcclxuICAuY29tcGxldGVkLXRleHQge1xyXG4gICAgY29sb3I6IGdyZWVuO1xyXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgfVxyXG4gIFxyXG4gIC5idG4tc3VjY2VzcyB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjhhNzQ1O1xyXG4gICAgYm9yZGVyOiBub25lO1xyXG4gICAgY29sb3I6IHdoaXRlO1xyXG4gICAgcGFkZGluZzogNXB4IDEwcHg7XHJcbiAgICBib3JkZXItcmFkaXVzOiAzcHg7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgfVxyXG4gIFxyXG4gIC5idG4tc3VjY2Vzczpob3ZlciB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjE4ODM4O1xyXG4gIH1cclxuICAiXSwic291cmNlUm9vdCI6IiJ9 */\"]\n    });\n  }\n  return DashboardComponent;\n})();","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ɵɵpipeBind2","note_r2","reminder","dueDate","isCompleted","ɵɵproperty","content","ɵɵsanitizeUrl","ɵɵtemplate","DashboardComponent_div_3_p_5_Template","DashboardComponent_div_3_p_6_Template","DashboardComponent_div_3_p_7_Template","DashboardComponent_div_3_p_8_Template","ɵɵtextInterpolate","type","ɵɵtwoWayListener","DashboardComponent_div_22_Template_input_ngModelChange_3_listener","$event","ɵɵrestoreView","_r3","ctx_r3","ɵɵnextContext","ɵɵtwoWayBindingSet","newNote","ɵɵresetView","ɵɵtwoWayProperty","DashboardComponent_div_23_Template_input_ngModelChange_3_listener","_r5","DashboardComponent_div_23_Template_input_ngModelChange_5_listener","DashboardComponent","noteService","notes","constructor","ngOnInit","fetchNotes","getNotes","subscribe","data","error","console","addNote","length","alert","Date","updatedNotes","resetNoteForm","ɵɵdirectiveInject","i1","NoteService","selectors","decls","vars","consts","template","DashboardComponent_Template","rf","ctx","DashboardComponent_div_3_Template","ɵɵlistener","DashboardComponent_Template_form_ngSubmit_4_listener","_r1","DashboardComponent_Template_select_ngModelChange_10_listener","DashboardComponent_Template_input_ngModelChange_21_listener","DashboardComponent_div_22_Template","DashboardComponent_div_23_Template","noteForm_r6","valid"],"sources":["D:\\Projects\\Note Management\\notes-management-frontend\\src\\app\\dashboard\\dashboard.component.ts","D:\\Projects\\Note Management\\notes-management-frontend\\src\\app\\dashboard\\dashboard.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { NoteService } from '../services/note.service';\r\nimport { Note } from '../models/note.model';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css']\r\n})\r\n\r\nexport class DashboardComponent implements OnInit {\r\n  notes: any[] = [];\r\n  newNote: Note = {\r\n    type: '',\r\n    content: '',\r\n    reminder: '',\r\n    dueDate: '',\r\n    isCompleted: false,\r\n  };\r\n\r\n  constructor(private noteService: NoteService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.fetchNotes();\r\n  }\r\n\r\n  fetchNotes(): void {\r\n    this.noteService.getNotes().subscribe(\r\n      (data) => {\r\n        this.notes = data;\r\n      },\r\n      (error) => {\r\n        console.error('Error fetching notes:', error);\r\n      }\r\n    );\r\n  }\r\n\r\n  addNote(): void {\r\n    if (this.newNote.content.length > 100) {\r\n      alert('Note content cannot exceed 100 characters.');\r\n      return;\r\n    }\r\n\r\n    this.newNote.reminder = this.newNote.reminder ? new Date(this.newNote.reminder) : null,\r\n    this.newNote.dueDate = this.newNote.dueDate ? new Date(this.newNote.dueDate) : null,\r\n    \r\n    this.noteService.addNote(this.newNote).subscribe(\r\n      (updatedNotes) => {\r\n        this.notes = updatedNotes;\r\n        this.resetNoteForm();\r\n      },\r\n      (error) => {\r\n        console.error('Error adding note:', error);\r\n      }\r\n    );\r\n  }\r\n\r\n  resetNoteForm(): void {\r\n    this.newNote = { type: '', content: '', reminder: '', dueDate: '', isCompleted: false };\r\n  }\r\n}","<div class=\"dashboard-container\">\r\n    <h2>Notes Dashboard</h2>\r\n    \r\n    <!-- Notes List -->\r\n    <div *ngFor=\"let note of notes\" class=\"note\">\r\n      <h4>{{ note.type }}</h4>\r\n      <p>{{ note.content }}</p>\r\n      <p *ngIf=\"note.reminder\">Reminder: {{ note.reminder | date:'short' }}</p>\r\n      <p *ngIf=\"note.dueDate\">Due Date: {{ note.dueDate | date:'short' }}</p>\r\n      <p *ngIf=\"note.type === 'ToDo'\">Completed: {{ note.isCompleted ? 'Yes' : 'No' }}</p>\r\n      <p *ngIf=\"note.type === 'Bookmark'\">\r\n        <a [href]=\"note.content\" target=\"_blank\">Visit Bookmark</a>\r\n      </p>\r\n    </div>\r\n    \r\n    <!-- Add New Note Form -->\r\n    <form (ngSubmit)=\"addNote()\" #noteForm=\"ngForm\" class=\"add-note-form\">\r\n      <h3>Add a New Note</h3>\r\n      \r\n      <label for=\"type\">Type</label>\r\n      <select id=\"type\" [(ngModel)]=\"newNote.type\" name=\"type\" required>\r\n        <option value=\"Regular Note\">Regular Note</option>\r\n        <option value=\"Reminder\">Reminder</option>\r\n        <option value=\"ToDo\">ToDo</option>\r\n        <option value=\"Bookmark\">Bookmark</option>\r\n      </select>\r\n      \r\n      <label for=\"content\">Content</label>\r\n      <input type=\"text\" id=\"content\" [(ngModel)]=\"newNote.content\" name=\"content\" maxlength=\"100\" required />\r\n      \r\n      <div *ngIf=\"newNote.type === 'Reminder'\">\r\n        <label for=\"reminder\">Reminder (Date + Time)</label>\r\n        <input type=\"datetime-local\" id=\"reminder\" [(ngModel)]=\"newNote.reminder\" name=\"reminder\" />\r\n      </div>\r\n      \r\n      <div *ngIf=\"newNote.type === 'ToDo'\">\r\n        <label for=\"dueDate\">Due Date (Date + Time)</label>\r\n        <input type=\"datetime-local\" id=\"dueDate\" [(ngModel)]=\"newNote.dueDate\" name=\"dueDate\" />\r\n        \r\n        <label>\r\n          <input type=\"checkbox\" [(ngModel)]=\"newNote.isCompleted\" name=\"isCompleted\" /> Completed\r\n        </label>\r\n      </div>\r\n      \r\n      <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!noteForm.valid\">Add Note</button>\r\n    </form>\r\n  </div>\r\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}